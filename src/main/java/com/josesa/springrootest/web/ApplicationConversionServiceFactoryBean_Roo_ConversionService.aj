// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.josesa.springrootest.web;

import com.josesa.springrootest.entity.Person;
import com.josesa.springrootest.entity.Project;
import com.josesa.springrootest.service.PersonService;
import com.josesa.springrootest.service.ProjectService;
import com.josesa.springrootest.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    @Autowired
    PersonService ApplicationConversionServiceFactoryBean.personService;
    
    @Autowired
    ProjectService ApplicationConversionServiceFactoryBean.projectService;
    
    public Converter<Person, String> ApplicationConversionServiceFactoryBean.getPersonToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.josesa.springrootest.entity.Person, java.lang.String>() {
            public String convert(Person person) {
                return new StringBuilder().append(person.getId()).append(' ').append(person.getName()).append(' ').append(person.getBirthDate()).toString();
            }
        };
    }
    
    public Converter<Long, Person> ApplicationConversionServiceFactoryBean.getIdToPersonConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.josesa.springrootest.entity.Person>() {
            public com.josesa.springrootest.entity.Person convert(java.lang.Long id) {
                return personService.findPerson(id);
            }
        };
    }
    
    public Converter<String, Person> ApplicationConversionServiceFactoryBean.getStringToPersonConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.josesa.springrootest.entity.Person>() {
            public com.josesa.springrootest.entity.Person convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Person.class);
            }
        };
    }
    
    public Converter<Project, String> ApplicationConversionServiceFactoryBean.getProjectToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.josesa.springrootest.entity.Project, java.lang.String>() {
            public String convert(Project project) {
                return new StringBuilder().append(project.getId()).append(' ').append(project.getName()).toString();
            }
        };
    }
    
    public Converter<Long, Project> ApplicationConversionServiceFactoryBean.getIdToProjectConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.josesa.springrootest.entity.Project>() {
            public com.josesa.springrootest.entity.Project convert(java.lang.Long id) {
                return projectService.findProject(id);
            }
        };
    }
    
    public Converter<String, Project> ApplicationConversionServiceFactoryBean.getStringToProjectConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.josesa.springrootest.entity.Project>() {
            public com.josesa.springrootest.entity.Project convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Project.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getPersonToStringConverter());
        registry.addConverter(getIdToPersonConverter());
        registry.addConverter(getStringToPersonConverter());
        registry.addConverter(getProjectToStringConverter());
        registry.addConverter(getIdToProjectConverter());
        registry.addConverter(getStringToProjectConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
